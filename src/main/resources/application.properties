spring.main.allow-bean-definition-overriding=true
server.port=8000

#spring.datasource.url=jdbc:postgresql://localhost:5432/assignment
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.datasource.driver-class-name=org.postgresql.Driver
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=false
#spring.jpa.hibernate.ddl-auto=none

spring.r2dbc.url=r2dbc:postgresql://localhost:5432/assignment
spring.r2dbc.username=postgres
spring.r2dbc.password=admin

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.r2dbc.url=r2dbc:h2:mem:///testdb
#spring.r2dbc.pool.enabled=false

#spring.r2dbc.url=r2dbc:pool:mysql://localhost/tutorial
#spring.r2dbc.username=admin
#spring.r2dbc.password=admin
#
##OTHER FOR DB (We are using mysql pooling to avoid many connections)
#spring.r2dbc.pool.initial-size=100
#spring.r2dbc.pool.max-size=500
#spring.r2dbc.pool.max-idle-time=30m
#spring.r2dbc.pool.validation-query=SELECT 1

#spring.r2dbc.url=jdbc:postgresql://localhost:5432/assignment
#spring.r2dbc.username=postgres
#spring.r2dbc.password=admin
#spring.jpa.show-sql=true
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

